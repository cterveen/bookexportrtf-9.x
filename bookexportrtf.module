<?php

/**
 * @file
 * Provides RTF export posibilities for books
 */
use Drupal\node\NodeInterface;
use Drupal\Core\Url;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function bookexportrtf_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.bookexportrtf':
      $output = '';
      $output .= '<p>' . t('The module allows the contents of a book or book part to be downloaded as an RTF file. A link to the RTF file is displayed at the bottom of the book page.') . '</p>';
      $output .= '<h3>' . t('External dependencies') . '</h3>';
      $output .= '<table><tbody>';
      $output .= '<tr><th>' . t('Library') . '</th><th>' . t('Installation directory') . '</th><th>' . t('Required files') . '</th></tr>';
      $output .= '<tr><td><a href = "https://simplehtmldom.sourceforge.io/" target = "_blank">Simple HTML DOM</a></td>';
      $output .= '    <td>/libraries/simple_html_dom</td><td>simple_html_dom.php</td></tr>';
      $output .= '<tr><td><a href = "https://github.com/Schepp/CSS-Parser" target = "_blank">Schepp\'s CSS Parser</a></td>';
      $output .= '    <td>/libraries/schepp-css-parser</td><td>parser.php</td></tr>';
      $output .= '</tbody></table>';
      $output .= '<p>' . t('Before the module can be installed the presence of the dependencies is checked.') . '</p>';
      $output .= '<h3>' . t('Document style') . '</h3>';
      $output .= '<p>' . t('The document styling is configured using CSS. The default css file is in the module\'s /css directory. ');
      $output .= t('A custom css file named bookexportrtf.rtf.css can be added to the theme\'s css directory. ');
      $output .= t('The style in that file overwrites the standard style and other elements, classes or id\'s may be added. ') . '</p>';
      $output .= '<p>' . t('A list of supported elements, classes, properties and values is in the table below. Supported properties are marked with +, supported properties with remarks with *. Properties which are not supported are marked with -, although these properties can be inherited by children like normal css. So if font-family is set for a div-element all p-elements within that div will have this font.');
      $output .= t('However, combinations of selectors are not supported. For example the selector \'#content h1\' is handled as two separate selectors.') . '</p>';
      $output .= '<table><tbody>';
      $output .= '<tr><th rowspan = 2 valign = "bottom" width = "18%">' . t('Supported properties') . '</th>';
      $output .= '    <th rowspan = 2 valign = "bottom" width = "20%">' . t('Supported values, units or formats') . '</th>';
      $output .= '    <th width = "10%">' . t('Body') . '</th>';
      $output .= '    <th width = "10%">' . t('Structure') . '</th>';
      $output .= '    <th width = "10%">' . t('Headers') . '</th>';
      $output .= '    <th width = "12%">' . t('Blocks') . '</th>';
      $output .= '    <th width = "10%">' . t('In-line') . '</th>';
      $output .= '    <th width = "10%">' . t('Table cell') . '</th></tr>';
      $output .= '<tr><th>body</th>';
      $output .= '    <th>div</th>';
      $output .= '    <th>h1<br />h2<br />h3<br />h4<br />h5<br />h6</th>';
      $output .= '    <th>code<br />li<br />p<br />.footer-left<br />.footer-right<br />.header-left<br />.header-right</th>';
      $output .= '    <th>del<br />ins<br />s<br />span<br />u</th>';
      $output .= '    <th>td<br />th</th></tr>';
      $output .= '<tr><td>border-bottom-style</td>';
      $output .= '    <td>[solid, dotted, dashed, double, none, hidden]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td></tr>';
      $output .= '<tr><td>border-bottom-width</td>';
      $output .= '    <td>[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td></tr>';
      $output .= '<tr><td>border-left-style</td>';
      $output .= '    <td>[solid, dotted, dashed, double, none, hidden]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td></tr>';
      $output .= '<tr><td>border-left-width</td>';
      $output .= '    <td>[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td></tr>';
      $output .= '<tr><td>border-right-style</td>';
      $output .= '    <td>[solid, dotted, dashed, double, none, hidden]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td></tr>';
      $output .= '<tr><td>border-right-width</td>';
      $output .= '    <td>[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td></tr>';
      $output .= '<tr><td>border-top-style</td>';
      $output .= '    <td>[solid, dotted, dashed, double, none, hidden]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td></tr>';
      $output .= '<tr><td>border-top-width</td>';
      $output .= '    <td>[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td></tr>';
      $output .= '<tr><td>color</td>';
      $output .= '    <td>[rgb(), #, color name]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td></tr>';
      $output .= '<tr><td>font-family</td>';
      $output .= '    <td>[first value only]</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td></tr>';
      $output .= '<tr><td>font-size</td>';
      $output .= '    <td>[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td></tr>';
      $output .= '<tr><td>font-weight</td>';
      $output .= '    <td>[bold, normal]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td></tr>';
      $output .= '<tr><td>margin-bottom</td>';
      $output .= '    <td>[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td></tr>';
      $output .= '<tr><td>margin-left</td>';
      $output .= '    <td>[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td></tr>';
      $output .= '<tr><td>margin-right</td>';
      $output .= '    <td>[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td></tr>';
      $output .= '<tr><td>margin-top</td>';
      $output .= '    <td>[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td></tr>';
      $output .= '<tr><td>page-break-before</td>';
      $output .= '    <td>[always, avoid]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td></tr>';
      $output .= '<tr><td>page-break-after</td>';
      $output .= '    <td>[always, avoid]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td></tr>';
      $output .= '<tr><td>text-align</td>';
      $output .= '    <td>[left, right, center, justify]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td></tr>';
      $output .= '<tr><td>text-decoration</td>';
      $output .= '    <td>[line-through, underline, none]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td>';
      $output .= '    <td>+</td></tr>';
      $output .= '<tr><td>text-decoration-color<sup>1</sup></td>';
      $output .= '    <td>[rgb(), #, color name]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>*</td>';
      $output .= '    <td>*</td>';
      $output .= '    <td>*</td>';
      $output .= '    <td>*</td></tr>';
      $output .= '<tr><td>text-decoration-style<sup>1</sup></td>';
      $output .= '    <td>[rgb(), #, color name]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>*</td>';
      $output .= '    <td>*</td>';
      $output .= '    <td>*</td>';
      $output .= '    <td>*</td></tr>';
      $output .= '<tr><td>vertical-align</td>';
      $output .= '    <td>[top, middle, bottom]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td></tr>';
      $output .= '<tr><td>width</td>';
      $output .= '    <td>[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>-</td>';
      $output .= '    <td>+</td></tr>';
      $output .= '</tbody></table>';
      $output .= '<p><sup>1</sup> ' . t('Text decoration style and color only affect underline due to limitations in RTF. LibreOffice does not support changing the underline color.');
      $output .= '<h3>' . t('Page size') . '</h3>';
      $output .= '<p>' . t('The page size is A4 with standard margins. The page size can not be customized at the moment.') . '</p>';
      $output .= '<h3>' . t('Whitespace') . '</h3>';
      $output .= '<p>' . t('Whitespace handling differs between HTML and RTF. Whereas HTML ignores whitespace between structural elements and shows multiple whitespace elements as a single space RTF only ignores a single space after a tag. Therefore whitespace between structural elements is removed, however whitespace within texts are preserved. Newlines are ignored by both RTF and HTML and are removed except when embeded in &lt;pre&gt;...&lt;/pre&gt; tags. The HTML newline element &lt;br /&gt; is replaced by a newline in RTF.') . '</p>';
      $output .= '<h3>' . t('Images') . '</h3>';
      $output .= '<p>' . t('PNG, JPEG and GIF image formats are supported, GIF images are transfered to PNG. Images will keep their default size or are scaled to the page width if they are wider than the page. Scaling of images is not supported.') . '</p>';

      return $output;
    default:
  }
}

/**
 * Implements hook_node_links_alter().
 */
function bookexportrtf_node_links_alter(array &$links, NodeInterface $node, array &$context) {
  if ($context['view_mode'] != 'rss') {
    if (isset($node->book['depth'])) {
      if ($context['view_mode'] == 'full' && node_is_page($node)) {
        $book_links['book_rtf'] = [
          'title' => t('Download as RTF'),
          'url' => Url::fromRoute('bookexportrtf.content', [
          'node' => $node->id(),
          ]),
          'attributes' => ['title' => t('Download as RTF Document')],
        ];
      }
    }

    if (!empty($book_links)) {
      $links['bookexportrtf'] = [
        '#theme' => 'links__node__book',
        '#links' => $book_links,
        '#attributes' => ['class' => ['links', 'inline']],
      ];
    }
  }
}
