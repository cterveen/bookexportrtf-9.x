<?php

/**
 * @file
 * Provides RTF export posibilities for books
 */

use Drupal\node\NodeInterface;
use Drupal\Core\Url;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function bookexportrtf_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.bookexportrtf':
      $output = '<h2>' . t('About') . '</h2>';
      $output .= '<p>' . t('The Book Export RTF module makes it possible to download a <i>Book</i> or <i>Book</i>-page as an RTF document.') . '</p>';
      $output .= '<h2>' . t('Uses') . '</h2>';
      $output .= '<dl>';
      $output .= '<dt>' . t('Install') . '</dt>';
      $output .= '<dd>' . t('The dependencies for the Book Export RTF module are the Book module, Simple HTML DOM and Schepp\'s CSS parser. Installation instructions for these dependencies are available during the installation process.') . '</dd>';
      $output .= '<dt>' . t('Downloading the RTF document') . '</dt>';
      $output .= '<dd>' . t('The document can be downloaded through the link at the bottom of the book page. The RTF document contains the current page and its subpages.') . '</dd>';
      $output .= '<dt>' . t('Adding terms to the index') . '</dt>';
      $output .= '<dd>' . t('The Book Export RTF module can add an index to the book. To add a term to the index make a named anchor with the name <i>index[Term]</i> to the book. For example, <code>&lt;a name="indexExample"&gt;&lt;/a&gt;</code> will add the term <i>Example</i> to the index. The index can also be shown on your website using the Book Index module.') . '</dd>';
      $output .= '<dt>' . t('White space') . '</dt>';
      $output .= '<dd>' . t('Whitespace handling differs between HTML and RTF. Whereas HTML ignores whitespace between structural elements and shows multiple whitespace elements as a single space RTF only ignores a single space after a tag. Therefore whitespace between structural elements is removed, however whitespace within texts is preserved. Newlines are ignored by both RTF and HTML and are removed except when embeded in <code>&lt;pre&gt;&hellip;&lt;/pre&gt;</code> tags. The HTML newline element <code>&lt;br /&gt;</code> is replaced by a newline in RTF.') . '</dd>';
      $output .= '<dt>' . t('Styling') . '</dt>';
      $output .= '<dd>' . t('The style of the book, including the page size, is set through CSS. A custom CSS file named bookexportrtf.rtf.css can be added to the theme\'s css directory. A list of supported elements, classes, properties and values is in the modules CSS file.') . '</dd>';
      $output .= '<dt>' . t('Translation') . '</dt>';
      $output .= '<dd>' . t('Translations will be read from /modules/bookexportrtf/translations. If the module is installed in a different directory the po file(s) may be uploaded manually. To make a new translation copy bookexportrtf.nl.po and replace the language code in the file name (nl) by the target language code. Then replace each string identified with msgstr with the new translation of the string identified by msgid in the previous line. Finally update the interface translations.') . '</dd>';

      return $output;
    default:
  }
}

/**
 * Implements hook_node_links_alter().
 */
function bookexportrtf_node_links_alter(array &$links, NodeInterface $node, array &$context) {
  if ($context['view_mode'] != 'rss') {
    if (isset($node->book)) {
      if ($context['view_mode'] == 'full' && node_is_page($node)) {
        $book_links['book_rtf'] = [
          'title' => t('RTF version'),
          'url' => Url::fromRoute('bookexportrtf.content', [
          'node' => $node->id(),
          ]),
          'attributes' => ['title' => t('Download this page (and its subpages) as RTF file.')],
        ];
      }
    }

    if (!empty($book_links)) {
      $links['bookexportrtf'] = [
        '#theme' => 'links__node__book',
        '#links' => $book_links,
        '#attributes' => ['class' => ['links', 'inline']],
      ];
    }
  }
}
