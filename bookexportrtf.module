<?php

/**
 * @file
 * Provides RTF export posibilities for books
 */
use Drupal\node\NodeInterface;
use Drupal\Core\Url;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function bookexportrtf_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.bookexportrtf':
      $output = '';
      $output .= '<p>' . t('The module allows the contents of a book or book part to be downloaded as an RTF file. A link to the RTF file is displayed at the bottom of the book page.') . '</p>';
      $output .= '<h3>' . t('External dependencies') . '</h3>';
      $output .= '<table><tbody>';
      $output .= '<tr><th>' . t('Library') . '</th><th>' . t('Installation directory') . '</th><th>' . t('Required files') . '</th></tr>';
      $output .= '<tr><td><a href = "https://simplehtmldom.sourceforge.io/" target = "_blank">Simple HTML DOM</a></td>';
      $output .= '    <td>/libraries/simple_html_dom</td><td>simple_html_dom.php</td></tr>';
      $output .= '<tr><td><a href = "https://github.com/Schepp/CSS-Parser" target = "_blank">Schepp\'s CSS Parser</a></td>';
      $output .= '    <td>/libraries/schepp-css-parser</td><td>parser.php</td></tr>';
      $output .= '</tbody></table>';
      $output .= '<p>' . t('Before the module can be installed the presence of the dependencies is checked.') . '</p>';
      $output .= '<h3>' . t('Document style') . '</h3>';
      $output .= '<p>' . t('The document styling is based on the HTML of the doc and can be configured using CSS.' . '</p>');
      $output .= '<p>' . t('The following HTML elements are supported:') . '</p>';
      $output .= '<table><tbody>';
      $output .= '<tr><th>' . t('Element') . '</th><th>' . t('Notes') . '</th></tr>';
      $output .= '<tr><td>a</td><td>' . t('When the URL differs from the link text it is added as a footnote, no hyperlink is made in the text. Named anchors are ignored except when part of the index.') .'</td></tr>';
      $output .= '<tr><td>article</td><td>' . t('Book pages are encapsulated within article tags. Each article starts a new section with an (automatic) page break. It is possible to avoid page-breaks for a certain depth by setting "page-break-before: avoid" for the special selector .article-depth-<i>N</i> where <i>N</i>=1 is the top level (book) and <i>N</i>=2 is the second level (chapter) etc.') . '</td></tr>';
      $output .= '<tr><td>b</td><td></td></tr>';
      $output .= '<tr><td>body</td><td>' . t('The body is used to set the default font.') . '</td></tr>';
      $output .= '<tr><td>br</td><td></td></tr>';
      $output .= '<tr><td>code</td><td>' . t('Put &lt;code&gt; between &lt;pre&gt; tags to preserve newlines and whitespace.') . '</td></tr>';
      $output .= '<tr><td>del</td><td></td></tr>';
      $output .= '<tr><td>div</td><td>' . t('Only for document structure, text should be between &lt;p&gt; tags.') . '</td></tr>';
      $output .= '<tr><td>h1</td><td>' . t ('Header 1 also sets the headers and footers.') . '</td></tr>';
      $output .= '<tr><td>h2</td><td></td></tr>';
      $output .= '<tr><td>h3</td><td>' . t('Header 3 is used for the book title.') . '</td></tr>';
      $output .= '<tr><td>h4</td><td></td></tr>';
      $output .= '<tr><td>h5</td><td></td></tr>';
      $output .= '<tr><td>h6</td><td></td></tr>';
      $output .= '<tr><td>head</td><td>' . t('The head is removed.') . '</td></tr>';
      $output .= '<tr><td>i</td><td></td></tr>';
      $output .= '<tr><td>img</td><td>' . t('PNG, JPEG and (non-animated) GIF. Scaled to page width when wider.') . '</td></tr>';
      $output .= '<tr><td>ins</td><td></td></tr>';
      $output .= '<tr><td>li</td><td>' . t('Both ordered and unordered lists. Ordered list are formated to numeric (1., 2., 3., ...). None-inherited properties from ul and ol are ignored. Indentation can be configured using text-indent for the "bullet" (which should be a negative number) and margin-left for the main text. Space after the last item of the list (including sublists) can be set using the special selector .last-item-in-list.') . '</td></tr>';
      $output .= '<tr><td>p</td><td></td></tr>';
      $output .= '<tr><td>pre</td><td>' . t('This is currently the only way to preserve spacing and newlines.') . '</td></tr>';
      $output .= '<tr><td>s</td><td></td></tr>';
      $output .= '<tr><td>span</td><td></td></tr>';
      $output .= '<tr><td>strike</td><td>' . t('Depricated since HTML 5.0, use &lt;s&gt; instead.') . '</td></tr>';
      $output .= '<tr><td>strong</td><td></td></tr>';
      $output .= '<tr><td>sub</td><td></td></tr>';
      $output .= '<tr><td>sup</td><td></td></tr>';
      $output .= '<tr><td>table</td><td>' . t('See &lt;tbody&gt;, which is required.') . '</td></tr>';
      $output .= '<tr><td>tbody</td><td>' . t('Tables are scaled to the page width. Cell width is proportional to the number of columns unless specified with a fixed length in CSS.') . '</td></tr>';
      $output .= '<tr><td>td</td><td>' . t('Merging cells with the colspan attribute is supported, rowspan is not supported.') . '</td></tr>';
      $output .= '<tr><td>th</td><td>' . t('See') . ' &lt;td&gt;.</td></tr>';
      $output .= '<tr><td>u</td><td></td></tr>';
      $output .= '</table>';
      $output .= t('A custom css file named bookexportrtf.rtf.css can be added to the theme\'s css directory. ');
      $output .= t('The style in that file overwrites the standard style and other elements, classes or id\'s may be added. ') . '</p>';
      $output .= '<p>' . t('A list of supported elements, classes, properties and values is in the table below. Supported properties are marked with +, supported properties with remarks with *, non-supported properties with -. Non-supported properties can however be inherited from non-supported elements by default (following CSS rules) or by the inherit keyword. ');
      $output .= t('Combinations of selectors are not supported. For example the selector \'#content h1\' is handled as two separate selectors instead of h1 for #content only.') . '</p>';
      $output .= '<table><tbody>';
      $output .= '<tr><th rowspan = 2 valign = "bottom" width = "33%">' . t('Supported properties') . '<br />&nbsp;&nbsp;&nbsp;' . t('[supported values, units or formats]') . '</th>';
      $output .= '    <th width = "10%">' . t('Body') . '</th>';
      $output .= '    <th width = "14%">' . t('Structure') . '</th>';
      $output .= '    <th width = "10%">' . t('Headers') . '</th>';
      $output .= '    <th width = "12%">' . t('Blocks') . '</th>';
      $output .= '    <th width = "10%">' . t('In-line') . '</th>';
      $output .= '    <th width = "10%">' . t('Table cell') . '</th></tr>';
      $output .= '<tr><th>body</th>';
      $output .= '    <th>article<br />div<br />.article-depth-<i>N</i></th>';
      $output .= '    <th>h1<br />h2<br />h3<br />h4<br />h5<br />h6</th>';
      $output .= '    <th>code<br />li<br />p<br />.footer-left<br />.footer-right<br />.header-left<br />.header-right</th>';
      $output .= '    <th>del<br />ins<br />s<br />span<br />u</th>';
      $output .= '    <th>td<br />th</th></tr>';
      $output .= '<tr><td>border-bottom-style<br />&nbsp;&nbsp;&nbsp;[solid, dotted, dashed, double, none, hidden]</td>';
      $output .= '    <td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>+</td></tr>';
      $output .= '<tr><td>border-bottom-width<br />&nbsp;&nbsp;&nbsp;[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>+</td></tr>';
      $output .= '<tr><td>border-left-style<br />&nbsp;&nbsp;&nbsp;[solid, dotted, dashed, double, none, hidden]</td>';
      $output .= '    <td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>+</td></tr>';
      $output .= '<tr><td>border-left-width<br />&nbsp;&nbsp;&nbsp;[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>+</td></tr>';
      $output .= '<tr><td>border-right-style<br />&nbsp;&nbsp;&nbsp;[solid, dotted, dashed, double, none, hidden]</td>';
      $output .= '    <td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>+</td></tr>';
      $output .= '<tr><td>border-right-width<br />&nbsp;&nbsp;&nbsp;[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>+</td></tr>';
      $output .= '<tr><td>border-top-style<br />&nbsp;&nbsp;&nbsp;[solid, dotted, dashed, double, none, hidden]</td>';
      $output .= '    <td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>+</td></tr>';
      $output .= '<tr><td>border-top-width<br />&nbsp;&nbsp;&nbsp;[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>+</td></tr>';
      $output .= '<tr><td>color<br />&nbsp;&nbsp;&nbsp;[rgb(), #, color name]</td>';
      $output .= '    <td>-</td><td>-</td><td>+</td><td>+</td><td>+</td><td>+</td></tr>';
      $output .= '<tr><td>font-family<br />&nbsp;&nbsp;&nbsp;[first value only]</td>';
      $output .= '    <td>+</td><td>-</td><td>+</td><td>+</td><td>+</td><td>+</td></tr>';
      $output .= '<tr><td>font-size<br />&nbsp;&nbsp;&nbsp;[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td><td>-</td><td>+</td><td>+</td><td>+</td><td>+</td></tr>';
      $output .= '<tr><td>font-weight<br />&nbsp;&nbsp;&nbsp;[bold, normal]</td>';
      $output .= '    <td>-</td><td>-</td><td>+</td><td>+</td><td>+</td><td>+</td></tr>';
      $output .= '<tr><td>margin-bottom<br />&nbsp;&nbsp;&nbsp;[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td><td>-</td><td>+</td><td>+</td><td>-</td><td>+</td></tr>';
      $output .= '<tr><td>margin-left<br />&nbsp;&nbsp;&nbsp;[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td><td>-</td><td>+</td><td>+</td><td>-</td><td>+</td></tr>';
      $output .= '<tr><td>margin-right<br />&nbsp;&nbsp;&nbsp;[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td><td>-</td><td>+</td><td>+</td><td>-</td><td>+</td></tr>';
      $output .= '<tr><td>margin-top<br />&nbsp;&nbsp;&nbsp;[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td><td>-</td><td>+</td><td>+</td><td>-</td><td>+</td></tr>';
      $output .= '<tr><td>page-break-after<sup>1</sup><br />&nbsp;&nbsp;&nbsp;[always, auto, avoid]</td>';
      $output .= '    <td>-</td><td>*</td><td>*</td><td>-</td><td>-</td><td>-</td></tr>';
      $output .= '<tr><td>page-break-before<sup>2</sup><br />&nbsp;&nbsp;&nbsp;[always, auto, avoid]</td>';
      $output .= '    <td>-</td><td>*</td><td>*</td><td>-</td><td>-</td><td>-</td></tr>';
      $output .= '<tr><td>text-align<br />&nbsp;&nbsp;&nbsp;[left, right, center, justify]</td>';
      $output .= '    <td>-</td><td>-</td><td>+</td><td>+</td><td>-</td><td>+</td></tr>';
      $output .= '<tr><td>text-decoration<br />&nbsp;&nbsp;&nbsp;[line-through, underline, none]</td>';
      $output .= '    <td>-</td><td>-</td><td>+</td><td>+</td><td>+</td><td>+</td></tr>';
      $output .= '<tr><td>text-decoration-color<sup>3</sup><br />&nbsp;&nbsp;&nbsp;[rgb(), #, color name]</td>';
      $output .= '    <td>-</td><td>-</td><td>*</td><td>*</td><td>*</td><td>*</td></tr>';
      $output .= '<tr><td>text-decoration-style<sup>3</sup><br />&nbsp;&nbsp;&nbsp;[solid, double, dashed, dotted, wavy]</td>';
      $output .= '    <td>-</td><td>-</td><td>*</td><td>*</td><td>*</td><td>*</td></tr>';
      $output .= '<tr><td>text-indent<br />&nbsp;&nbsp;&nbsp;[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td><td>-</td><td>+</td><td>+</td><td>-</td><td>+</td></tr>';
      $output .= '<tr><td>vertical-align<br />&nbsp;&nbsp;&nbsp;[top, middle, bottom]</td>';
      $output .= '    <td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>+</td></tr>';
      $output .= '<tr><td>width<br />&nbsp;&nbsp;&nbsp;[cm, mm, in, px, pt, pc]</td>';
      $output .= '    <td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>+</td></tr>';
      $output .= '</tbody></table>';
      $output .= '<p><sup>1</sup>' . t(' page-break-before: avoid is only supported for div and article') . '<br />';
      $output .= '   <sup>2</sup>' . t(' page-break-after: avoid is only supported for h1 - h6') . '<br />';
      $output .= '   <sup>3</sup>' . t(' Text decoration style and color only affect underline due to limitations in RTF. LibreOffice does not support changing the underline color.') .'</p>';
      $output .= '<h3>' . t('Page size') . '</h3>';
      $output .= '<p>' . t('The page size is A4 with standard margins. The page size can not be customized at the moment.') . '</p>';
      $output .= '<h3>' . t('Whitespace') . '</h3>';
      $output .= '<p>' . t('Whitespace handling differs between HTML and RTF. Whereas HTML ignores whitespace between structural elements and shows multiple whitespace elements as a single space RTF only ignores a single space after a tag. Therefore whitespace between structural elements is removed, however whitespace within texts is preserved. Newlines are ignored by both RTF and HTML and are removed except when embeded in &lt;pre&gt;...&lt;/pre&gt; tags. The HTML newline element &lt;br /&gt; is replaced by a newline in RTF.') . '</p>';

      return $output;
    default:
  }
}

/**
 * Implements hook_node_links_alter().
 */
function bookexportrtf_node_links_alter(array &$links, NodeInterface $node, array &$context) {
  if ($context['view_mode'] != 'rss') {
    if (isset($node->book['depth'])) {
      if ($context['view_mode'] == 'full' && node_is_page($node)) {
        $book_links['book_rtf'] = [
          'title' => t('Download as RTF'),
          'url' => Url::fromRoute('bookexportrtf.content', [
          'node' => $node->id(),
          ]),
          'attributes' => ['title' => t('Download as RTF Document')],
        ];
      }
    }

    if (!empty($book_links)) {
      $links['bookexportrtf'] = [
        '#theme' => 'links__node__book',
        '#links' => $book_links,
        '#attributes' => ['class' => ['links', 'inline']],
      ];
    }
  }
}
