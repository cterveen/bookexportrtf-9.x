<?php

/**
 * @file
 * Provides RTF export posibilities for books
 */
use Drupal\node\NodeInterface;
use Drupal\Core\Url;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function bookexportrtf_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.bookexportrtf':
      $output = '';
      $output .= '<p>' . t('The module allows the contents of a book or book part to be downloaded as an RTF file. A link to the RTF file is displayed at the bottom of the book page.') . '</p>';
      $output .= '<h3>' . t('External dependencies') . '</h3>';
      $output .= '<table><tbody>';
      $output .= '<tr><th>' . t('Library') . '</th><th>' . t('Installation directory') . '</th><th>' . t('Required files') . '</th></tr>';
      $output .= '<tr><td><a href = "https://simplehtmldom.sourceforge.io/" target = "_blank">Simple HTML DOM</a></td>';
      $output .= '    <td>/libraries/simple_html_dom</td><td>simple_html_dom.php</td></tr>';
      $output .= '<tr><td><a href = "https://github.com/Schepp/CSS-Parser" target = "_blank">Schepp\'s CSS Parser</a></td>';
      $output .= '    <td>/libraries/schepp-css-parser</td><td>parser.php</td></tr>';
      $output .= '</tbody></table>';
      $output .= '<p>' . t('Before the module can be installed the presence of the dependencies is checked.') . '</p>';
      $output .= '<h3>' . t('Document style') . '</h3>';
      $output .= '<p>' . t('The document styling is configured using CSS. The default css file is in the module\'s /css directory. ');
      $output .= t('A custom css file named bookexportrtf.rtf.css can be added to the theme\'s css directory. ');
      $output .= t('The style in this file overwrites the standard style and other elements, classes or id\'s may be added. ');
      $output .= t('Style is inherited from parent elements just like normal CSS even if the property is not listed as supported for the parent. For example font-family set in body will be enherited by all child elements unless overwritten. ');
      $output .= t('However, combinations of selectors are not supported. For example the selector \'#content h1\' is handled as two separate selectors.') . '</p>';
      $output .= '<p>' . t('The following elements and selectors are supported:') . '</p>';
      $output .= '<table><tbody>';
      $output .= '<tr><th>' . t('Element type') . '</th><th>' . t('Elements') . '</th><th>' . t('Supported properties') . '</th><th>' . t('Supported values, units or formats') . '</th></tr>';
      $output .= '<tr><td valign = "top">' . t('Document') . '</td>';
      $output .= '    <td valign = "top">body</td>';
      $output .= '    <td valign = "top">font-family</td>';
      $output .= '    <td valign = "top">[first value only]</td></tr>';
      $output .= '<tr><td valign = "top">' . t('Lay-out') . '</td>';
      $output .= '    <td valign = "top">div</td>';
      $output .= '    <td valign = "top">page-break-before<br />page-break-after</td>';
      $output .= '    <td valign = "top">[always avoid]</br>[always avoid]</td></tr>';
      $output .= '<tr><td valign = "top">' . t('Block') . '</td>';
      $output .= '    <td valign = "top">code<br />h1<br />h2<br />h3<br />h4<br />h5<br />h6<br />li<br />p</td>';
      $output .= '    <td valign = "top">color<br />margin-top<br />margin-right<br />margin-bottom<br />margin-left<br />font-family<br />font-size<br />font-weight<br />text-align<br />text-decoration<br />text-decoration-color<sup>1</sup><br />text-decoration-style<sup>1</sup></td>';
      $output .= '    <td valign = "top">[rgb(), #, color name]<br />[cm, mm, in, px, pt, pc]<br />[cm, mm, in, px, pt, pc]<br />[cm, mm, in, px, pt, pc]<br />[cm, mm, in, px, pt, pc]<br />[first value only]<br />[cm, mm, in, px, pt, pc]<br />[bold, normal]<br />[left, right, center, justify]<br />[line-through, underline, none]<br />[rgb(), #, color name]<br />[solid, double, dashed, dotted, wavy]</td></tr>';
      $output .= '<tr><td valign = "top">' . t('In-line') . '</td>';
      $output .= '    <td valign = "top">del<br />ins<br />s<br />span<br />u</td>';
      $output .= '    <td valign = "top">color<br />font-family<br />font-size<br />font-weight<br />text-decoration<br />text-decoration-color<sup>1</sup><br />text-decoration-style<sup>1</sup></td>';
      $output .= '    <td valign = "top">[rgb(), #, color name]<br />[first value only]<br />[cm, mm, in, px, pt, pc]<br />[bold, normal]<br />[line-through, underline, none]<br />[rgb(), #, color name]<br />[solid, double, dashed, dotted, wavy]</td></tr>';
      $output .= '<tr><td valign = "top">' . t('Table cell') . '</td>';
      $output .= '    <td valign = "top">td<br />th</td>';
      $output .= '    <td valign = "top">color<br />border-bottom-style<br />border-bottom-width<br />border-left-style<br />border-left-width<br />border-right-style<br />border-right-width<br />border-top-style<br />border-top-width<br />margin-top<br />margin-right<br />margin-bottom<br />margin-left<br />font-family<br />font-size<br />font-weight<br />text-align<br />text-decoration<br />text-decoration-color<sup>1</sup><br />text-decoration-style<sup>1</sup><br />vertical-align<br />width</td>';
      $output .= '    <td valign = "top">[rgb(), #, color name]<br />[solid, dotted, dashed, double, none, hidden]<br />[cm, mm, in, px, pt, pc]<br />[solid, dotted, dashed, double, none, hidden]<br />[cm, mm, in, px, pt, pc]<br />[solid, dotted, dashed, double, none, hidden]<br />[cm, mm, in, px, pt, pc]<br />[solid, dotted, dashed, double, none, hidden]<br />[cm, mm, in, px, pt, pc]<br />[cm, mm, in, px, pt, pc]<br />[cm, mm, in, px, pt, pc]<br />[cm, mm, in, px, pt, pc]<br />[cm, mm, in, px, pt, pc]<br />[first value only]<br />[cm, mm, in, px, pt, pc]<br />[bold, normal]<br />[left, right, center, justify]<br />[line-through, underline, none]<br />[rgb(), #, color name]<br />[solid, double, dashed, dotted, wavy]<br />[top, middle, bottom]<br />[cm, mm, in, px, pt, pc]</td></tr>';
      $output .= '</tbody></table>';
      $output .= '<p><sup>1</sup> ' . t('Text decoration style and color only affect underline due to limitations in RTF. LibreOffice does not support changing the underline color.');
      $output .= '<h3>' . t('Whitespace') . '</h3>';
      $output .= '<p>' . t('Whitespace handling differs between HTML and RTF. Whereas HTML ignores whitespace between structural elements and shows multiple whitespace elements as a single space RTF only ignores a single space after a tag. Therefore whitespace between structural elements is removed, however whitespace within texts are preserved. Newlines are ignored by both RTF and HTML and are removed except when embeded in &lt;pre&gt;...&lt;/pre&gt; tags. The HTML newline element &lt;br /&gt; is replaced by a newline in RTF.') . '</p>';
      $output .= '<h3>' . t('Images') . '</h3>';
      $output .= '<p>' . t('PNG, JPEG and GIF image formats are supported, GIF images are transfered to PNG. Images will keep their default size or are scaled to the page width if they are wider than the page. Scaling of images is not supported.') . '</p>';

      return $output;
    default:
  }
}

/**
 * Implements hook_node_links_alter().
 */
function bookexportrtf_node_links_alter(array &$links, NodeInterface $node, array &$context) {
  if ($context['view_mode'] != 'rss') {
    if (isset($node->book['depth'])) {
      if ($context['view_mode'] == 'full' && node_is_page($node)) {
        $book_links['book_rtf'] = [
          'title' => t('Download as RTF'),
          'url' => Url::fromRoute('bookexportrtf.content', [
          'node' => $node->id(),
          ]),
          'attributes' => ['title' => t('Download as RTF Document')],
        ];
      }
    }

    if (!empty($book_links)) {
      $links['bookexportrtf'] = [
        '#theme' => 'links__node__book',
        '#links' => $book_links,
        '#attributes' => ['class' => ['links', 'inline']],
      ];
    }
  }
}
